// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: Chess.proto

package chessapi

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Color int32

const (
	Color_White Color = 0
	Color_Black Color = 1
)

// Enum value maps for Color.
var (
	Color_name = map[int32]string{
		0: "White",
		1: "Black",
	}
	Color_value = map[string]int32{
		"White": 0,
		"Black": 1,
	}
)

func (x Color) Enum() *Color {
	p := new(Color)
	*p = x
	return p
}

func (x Color) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Color) Descriptor() protoreflect.EnumDescriptor {
	return file_Chess_proto_enumTypes[0].Descriptor()
}

func (Color) Type() protoreflect.EnumType {
	return &file_Chess_proto_enumTypes[0]
}

func (x Color) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Color.Descriptor instead.
func (Color) EnumDescriptor() ([]byte, []int) {
	return file_Chess_proto_rawDescGZIP(), []int{0}
}

type JoinGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *JoinGameRequest) Reset() {
	*x = JoinGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chess_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGameRequest) ProtoMessage() {}

func (x *JoinGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Chess_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGameRequest.ProtoReflect.Descriptor instead.
func (*JoinGameRequest) Descriptor() ([]byte, []int) {
	return file_Chess_proto_rawDescGZIP(), []int{0}
}

func (x *JoinGameRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type JoinGameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color  Color  `protobuf:"varint,1,opt,name=color,proto3,enum=Color" json:"color,omitempty"`
	GameId string `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
}

func (x *JoinGameResponse) Reset() {
	*x = JoinGameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chess_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGameResponse) ProtoMessage() {}

func (x *JoinGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Chess_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGameResponse.ProtoReflect.Descriptor instead.
func (*JoinGameResponse) Descriptor() ([]byte, []int) {
	return file_Chess_proto_rawDescGZIP(), []int{1}
}

func (x *JoinGameResponse) GetColor() Color {
	if x != nil {
		return x.Color
	}
	return Color_White
}

func (x *JoinGameResponse) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type SendMoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GameId string `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Move   string `protobuf:"bytes,3,opt,name=move,proto3" json:"move,omitempty"`
}

func (x *SendMoveRequest) Reset() {
	*x = SendMoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chess_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMoveRequest) ProtoMessage() {}

func (x *SendMoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Chess_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMoveRequest.ProtoReflect.Descriptor instead.
func (*SendMoveRequest) Descriptor() ([]byte, []int) {
	return file_Chess_proto_rawDescGZIP(), []int{2}
}

func (x *SendMoveRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SendMoveRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *SendMoveRequest) GetMove() string {
	if x != nil {
		return x.Move
	}
	return ""
}

type SendMoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendMoveResponse) Reset() {
	*x = SendMoveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chess_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMoveResponse) ProtoMessage() {}

func (x *SendMoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Chess_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMoveResponse.ProtoReflect.Descriptor instead.
func (*SendMoveResponse) Descriptor() ([]byte, []int) {
	return file_Chess_proto_rawDescGZIP(), []int{3}
}

type GetMoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId string `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
}

func (x *GetMoveRequest) Reset() {
	*x = GetMoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chess_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMoveRequest) ProtoMessage() {}

func (x *GetMoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Chess_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMoveRequest.ProtoReflect.Descriptor instead.
func (*GetMoveRequest) Descriptor() ([]byte, []int) {
	return file_Chess_proto_rawDescGZIP(), []int{4}
}

func (x *GetMoveRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type GetMoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Moves []string `protobuf:"bytes,1,rep,name=moves,proto3" json:"moves,omitempty"`
}

func (x *GetMoveResponse) Reset() {
	*x = GetMoveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chess_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMoveResponse) ProtoMessage() {}

func (x *GetMoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Chess_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMoveResponse.ProtoReflect.Descriptor instead.
func (*GetMoveResponse) Descriptor() ([]byte, []int) {
	return file_Chess_proto_rawDescGZIP(), []int{5}
}

func (x *GetMoveResponse) GetMoves() []string {
	if x != nil {
		return x.Moves
	}
	return nil
}

var File_Chess_proto protoreflect.FileDescriptor

var file_Chess_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x43, 0x68, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2a, 0x0a,
	0x0f, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x10, 0x4a, 0x6f, 0x69,
	0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x06, 0x2e, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61,
	0x6d, 0x65, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x76,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x76, 0x65, 0x22, 0x12, 0x0a,
	0x10, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x29, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x27, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x76, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x6d, 0x6f, 0x76, 0x65, 0x73, 0x2a, 0x1d, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x09,
	0x0a, 0x05, 0x57, 0x68, 0x69, 0x74, 0x65, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x10, 0x01, 0x32, 0x98, 0x01, 0x0a, 0x05, 0x43, 0x68, 0x65, 0x73, 0x73, 0x12, 0x2f,
	0x0a, 0x08, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x2e, 0x4a, 0x6f, 0x69,
	0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x4a,
	0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2f, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x10, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2d, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x73, 0x12, 0x0f, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x63, 0x68, 0x65, 0x73, 0x73, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Chess_proto_rawDescOnce sync.Once
	file_Chess_proto_rawDescData = file_Chess_proto_rawDesc
)

func file_Chess_proto_rawDescGZIP() []byte {
	file_Chess_proto_rawDescOnce.Do(func() {
		file_Chess_proto_rawDescData = protoimpl.X.CompressGZIP(file_Chess_proto_rawDescData)
	})
	return file_Chess_proto_rawDescData
}

var file_Chess_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_Chess_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_Chess_proto_goTypes = []interface{}{
	(Color)(0),               // 0: Color
	(*JoinGameRequest)(nil),  // 1: JoinGameRequest
	(*JoinGameResponse)(nil), // 2: JoinGameResponse
	(*SendMoveRequest)(nil),  // 3: SendMoveRequest
	(*SendMoveResponse)(nil), // 4: SendMoveResponse
	(*GetMoveRequest)(nil),   // 5: GetMoveRequest
	(*GetMoveResponse)(nil),  // 6: GetMoveResponse
}
var file_Chess_proto_depIdxs = []int32{
	0, // 0: JoinGameResponse.color:type_name -> Color
	1, // 1: Chess.JoinGame:input_type -> JoinGameRequest
	3, // 2: Chess.SendMove:input_type -> SendMoveRequest
	5, // 3: Chess.GetMoves:input_type -> GetMoveRequest
	2, // 4: Chess.JoinGame:output_type -> JoinGameResponse
	4, // 5: Chess.SendMove:output_type -> SendMoveResponse
	6, // 6: Chess.GetMoves:output_type -> GetMoveResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_Chess_proto_init() }
func file_Chess_proto_init() {
	if File_Chess_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Chess_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chess_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinGameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chess_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chess_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMoveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chess_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chess_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMoveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Chess_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_Chess_proto_goTypes,
		DependencyIndexes: file_Chess_proto_depIdxs,
		EnumInfos:         file_Chess_proto_enumTypes,
		MessageInfos:      file_Chess_proto_msgTypes,
	}.Build()
	File_Chess_proto = out.File
	file_Chess_proto_rawDesc = nil
	file_Chess_proto_goTypes = nil
	file_Chess_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ChessClient is the client API for Chess service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChessClient interface {
	JoinGame(ctx context.Context, in *JoinGameRequest, opts ...grpc.CallOption) (*JoinGameResponse, error)
	SendMove(ctx context.Context, in *SendMoveRequest, opts ...grpc.CallOption) (*SendMoveResponse, error)
	GetMoves(ctx context.Context, in *GetMoveRequest, opts ...grpc.CallOption) (*GetMoveResponse, error)
}

type chessClient struct {
	cc grpc.ClientConnInterface
}

func NewChessClient(cc grpc.ClientConnInterface) ChessClient {
	return &chessClient{cc}
}

func (c *chessClient) JoinGame(ctx context.Context, in *JoinGameRequest, opts ...grpc.CallOption) (*JoinGameResponse, error) {
	out := new(JoinGameResponse)
	err := c.cc.Invoke(ctx, "/Chess/JoinGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chessClient) SendMove(ctx context.Context, in *SendMoveRequest, opts ...grpc.CallOption) (*SendMoveResponse, error) {
	out := new(SendMoveResponse)
	err := c.cc.Invoke(ctx, "/Chess/SendMove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chessClient) GetMoves(ctx context.Context, in *GetMoveRequest, opts ...grpc.CallOption) (*GetMoveResponse, error) {
	out := new(GetMoveResponse)
	err := c.cc.Invoke(ctx, "/Chess/GetMoves", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChessServer is the server API for Chess service.
type ChessServer interface {
	JoinGame(context.Context, *JoinGameRequest) (*JoinGameResponse, error)
	SendMove(context.Context, *SendMoveRequest) (*SendMoveResponse, error)
	GetMoves(context.Context, *GetMoveRequest) (*GetMoveResponse, error)
}

// UnimplementedChessServer can be embedded to have forward compatible implementations.
type UnimplementedChessServer struct {
}

func (*UnimplementedChessServer) JoinGame(context.Context, *JoinGameRequest) (*JoinGameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinGame not implemented")
}
func (*UnimplementedChessServer) SendMove(context.Context, *SendMoveRequest) (*SendMoveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMove not implemented")
}
func (*UnimplementedChessServer) GetMoves(context.Context, *GetMoveRequest) (*GetMoveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMoves not implemented")
}

func RegisterChessServer(s *grpc.Server, srv ChessServer) {
	s.RegisterService(&_Chess_serviceDesc, srv)
}

func _Chess_JoinGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinGameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChessServer).JoinGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chess/JoinGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChessServer).JoinGame(ctx, req.(*JoinGameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chess_SendMove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendMoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChessServer).SendMove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chess/SendMove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChessServer).SendMove(ctx, req.(*SendMoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chess_GetMoves_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChessServer).GetMoves(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chess/GetMoves",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChessServer).GetMoves(ctx, req.(*GetMoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Chess_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Chess",
	HandlerType: (*ChessServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "JoinGame",
			Handler:    _Chess_JoinGame_Handler,
		},
		{
			MethodName: "SendMove",
			Handler:    _Chess_SendMove_Handler,
		},
		{
			MethodName: "GetMoves",
			Handler:    _Chess_GetMoves_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "Chess.proto",
}
